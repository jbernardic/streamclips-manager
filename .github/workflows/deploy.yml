name: Deploy

on:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - uses: actions/checkout@v4
      with:
        token: ${{ secrets.PAT }}
        submodules: recursive

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build and push
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        platforms: linux/arm64
        tags: ghcr.io/${{ github.repository }}:latest

    - name: Install hcloud CLI
      run: |
        wget -O hcloud.tar.gz https://github.com/hetznercloud/cli/releases/latest/download/hcloud-linux-amd64.tar.gz
        tar -xzf hcloud.tar.gz
        sudo mv hcloud /usr/local/bin/
        hcloud version

    - name: Setup SSH
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.SSH_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        
        # Configure SSH to skip host key checking
        cat >> ~/.ssh/config << SSHEOF
        Host *
            StrictHostKeyChecking no
            UserKnownHostsFile /dev/null
            LogLevel ERROR
        SSHEOF
    
    - name: Deploy to all instances
      env:
        HCLOUD_TOKEN: ${{ secrets.HCLOUD_TOKEN }}
      run: |
        # Get all servers with the 'instance' label
        SERVERS=$(hcloud server list -l app=instance -o noheader -o columns=name)
        
        if [ -z "$SERVERS" ]; then
          echo "No servers found with app=instance label"
          exit 1
        fi
        
        echo "Found servers with app=instance label:"
        echo "$SERVERS"
        
        # Deploy to each server
        for server in $SERVERS; do
          echo "🚀 Deploying to $server..."
          
          max_processes=$(hcloud server describe "$server" -o json | jq -r '
            if .server.labels.max_processes then
              .server.labels.max_processes
            else
              (.server.cores | tostring)
            end
          ')
          
          hcloud server ssh $server << EOF
            set -e  # Exit on any error
            
            echo "🛑 Stopping and removing old container..."
            docker stop socialagents || true
            docker rm socialagents || true

            echo "🗑️ Removing old images..."
            docker image prune -f
            
            echo "📦 Pulling new image..."
            echo "\${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u \${{ github.actor }} --password-stdin
            docker pull ghcr.io/\${{ github.repository }}:latest
            
            echo "▶️ Starting new container..."
            docker run -d \
              --name socialagents \
              --restart unless-stopped \
              -p 8000:8000 \
              -v socialagents_data:/app/data \
              -e DATABASE_URL="\${{ secrets.DATABASE_URL }}" \
              -e SECRET_KEY="\${{ secrets.SECRET_KEY }}" \
              -e ADMIN_PASSWORD="\${{ secrets.ADMIN_PASSWORD }}" \
              -e STORAGE_SERVER_HOST="\${{ secrets.STORAGE_SERVER_HOST }}" \
              -e STORAGE_SERVER_USER="\${{ secrets.STORAGE_SERVER_USER }}" \
              -e STORAGE_SERVER_PASSWORD="\${{ secrets.STORAGE_SERVER_PASSWORD }}" \
              -e STORAGE_SERVER_PATH="\${{ vars.STORAGE_SERVER_PATH }}" \
              -e INSTANCE_MAX_PROCESSES="$max_processes" \
              -e INSTANCE_ID="$server" \
              ghcr.io/\${{ github.repository }}:latest
            
            echo "✅ Deployment complete on $(hostname)"
            echo "📊 Container status:"
            docker ps | grep socialagents
        EOF
          
          if [ $? -eq 0 ]; then
            echo "✅ Successfully deployed to $server"
          else
            echo "❌ Failed to deploy to $server"
            exit 1
          fi
        done
        
        echo "🎉 All deployments completed successfully!"